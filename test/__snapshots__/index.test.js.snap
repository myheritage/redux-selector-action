// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`redux selector action createSelectorAction should return selector action with array of dependencies 1`] = `
Object {
  "meta": Object {
    "args": Array [
      "myArg",
    ],
    "selectors": Array [
      [Function],
      [Function],
    ],
  },
  "payload": [MockFunction],
  "type": "@@redux_selector_action",
}
`;

exports[`redux selector action createSelectorAction should return selector action with dependencies as args 1`] = `
Object {
  "meta": Object {
    "args": Array [
      "myArg",
    ],
    "selectors": Array [
      [Function],
      [Function],
    ],
  },
  "payload": [MockFunction],
  "type": "@@redux_selector_action",
}
`;

exports[`redux selector action createSelectorAction should return selector actions without dependencies 1`] = `
Object {
  "meta": Object {
    "args": Array [
      "myArg",
    ],
    "selectors": Array [],
  },
  "payload": [MockFunction],
  "type": "@@redux_selector_action",
}
`;

exports[`redux selector action createSelectorAction should throw error for invalid resultFunc 1`] = `"Selector actions should be based on action creator of type function, instead received the following type: [undefined]"`;

exports[`redux selector action getPlaceholder should match placeholder object empty 1`] = `
Object {
  "placeholder": "@@redux_selector_action/placeholder",
  "selectorObj": undefined,
}
`;

exports[`redux selector action getPlaceholder should match placeholder object with selector object 1`] = `
Object {
  "placeholder": "@@redux_selector_action/placeholder",
  "selectorObj": Object {
    "dep": [Function],
  },
}
`;

exports[`redux selector action getPlaceholder should throw error for invalid selectorObj 1`] = `"Placeholder for object arg should be of type object and not null, instead received the following type: [string]"`;

exports[`redux selector action getPlaceholder should throw error for nullable selectorObj 1`] = `"Placeholder for object arg should be of type object and not null, instead received the following type: [object]"`;

exports[`redux selector action reduxSelectorActionMiddleware should inject args to placeholders by position order 1`] = `
Array [
  Array [
    "dep1",
    "arg1",
    "const1",
    "dep2",
    "arg2",
    "dep3",
    "const2",
    "arg3",
    "arg4",
  ],
]
`;

exports[`redux selector action reduxSelectorActionMiddleware should inject object to placeholders by position order 1`] = `
Array [
  Array [
    "dep1",
    Object {
      "prop1": "prop1Value",
      "prop2": "myProp2Value",
      "prop3": "myProp3Value",
    },
    "const1",
    "dep2",
    Object {
      "otherProp1": "otherProp1Value",
      "otherProp2": "myOtherProp2Value",
      "otherProp3": "myOtherProp3Value",
    },
    "dep3",
    "const2",
    "arg3",
    "arg4",
  ],
]
`;

exports[`redux selector action reduxSelectorActionMiddleware should inject selectors output and non-function values to the given action creator 1`] = `
Array [
  Array [
    "dep1",
    "constant",
    undefined,
  ],
]
`;

exports[`redux selector action reduxSelectorActionMiddleware should throw error for invalid payload type 1`] = `"Selector actions should be based on action creator of type function, instead received the following type: [undefined]"`;
